name: deploy-dev

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  # push:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # inputs:
    #   version:
    #     description: "Image version"
    #     required: true
#2
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cms-api

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      BRANCH: ${{ steps.vars.outputs.BRANCH }}
      SHA_SHORT: ${{ steps.vars.outputs.SHA_SHORT }}
      NUMBER_COMMIT: ${{ steps.vars.outputs.NUMBER_COMMIT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "NUMBER_COMMIT=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

      - name: Check some variables
        run: |
          echo "Branch: ${{ steps.vars.outputs.BRANCH }}"
          echo "Sha: ${{ steps.vars.outputs.SHA_SHORT }}"
          echo "Commit number: ${{ steps.vars.outputs.NUMBER_COMMIT }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        # https://github.com/docker/setup-qemu-action
        # Add support for more platforms with QEMU (optional)

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: ./Dockerfile.dev
          # platforms: linux/amd64,linux/arm64
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
          # Note: tags has to be all lower-case
          tags: ${{env.REGISTRY}}/horsty80/${{env.IMAGE_NAME}}:${{ steps.vars.outputs.BRANCH }}.${{ steps.vars.outputs.NUMBER_COMMIT }}-${{ steps.vars.outputs.SHA_SHORT }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: dev

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy front to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.DEPLOYER_PASSPHRASE }}
          key: ${{ secrets.DEPLOYER_SSH_KEY }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          script: |
            # Stop running container
            docker stop ${{env.IMAGE_NAME}}
            # Remove old container
            docker rm ${{env.IMAGE_NAME}}
            # Run a new container from a new image
            # â€“rm \
            docker run -d -it --restart always \
            -p 8055:8055 \
            -e KEY={{ secrets.KEY }} \
            -e SECRET={{ secrets.SECRET }} \
            -e ADMIN_EMAIL={{ secrets.ADMIN_EMAIL }} \
            -e ADMIN_PASSWORD={{ secrets.ADMIN_PASSWORD }} \
            -e DB_CLIENT={{ secrets.DB_CLIENT }} \
            -e DB_HOST={{ secrets.DB_HOST }} \
            -e DB_PORT={{ secrets.DB_PORT }} \
            -e DB_USER={{ secrets.DB_USER }} \
            -e DB_PASSWORD={{ secrets.DB_PASSWORD }} \
            -e DB_DATABASE={{ secrets.DB_DATABASE }} \
            --name ${{env.IMAGE_NAME}} \
            ${{env.REGISTRY}}/horsty80/${{env.IMAGE_NAME}}:${{ needs.build_and_push.outputs.BRANCH }}.${{ needs.build_and_push.outputs.NUMBER_COMMIT }}-${{ needs.build_and_push.outputs.SHA_SHORT }}